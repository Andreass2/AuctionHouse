
package service.soap;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.11-b150120.1832
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SoapService", targetNamespace = "http://soap.service/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SoapService {


    /**
     * 
     * @param arg1
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bidForAuction", targetNamespace = "http://soap.service/", className = "service.soap.BidForAuction")
    @ResponseWrapper(localName = "bidForAuctionResponse", targetNamespace = "http://soap.service/", className = "service.soap.BidForAuctionResponse")
    @Action(input = "http://soap.service/SoapService/bidForAuctionRequest", output = "http://soap.service/SoapService/bidForAuctionResponse")
    public String bidForAuction(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "arg1", targetNamespace = "")
        String arg1);

    /**
     * 
     * @return
     *     returns java.util.List<service.soap.Auction>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getActiveAuctions", targetNamespace = "http://soap.service/", className = "service.soap.GetActiveAuctions")
    @ResponseWrapper(localName = "getActiveAuctionsResponse", targetNamespace = "http://soap.service/", className = "service.soap.GetActiveAuctionsResponse")
    @Action(input = "http://soap.service/SoapService/getActiveAuctionsRequest", output = "http://soap.service/SoapService/getActiveAuctionsResponse")
    public List<Auction> getActiveAuctions();

}
